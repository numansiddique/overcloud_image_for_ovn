From 1628c667e81754667db868cd5f1833078137d823 Mon Sep 17 00:00:00 2001
From: Babu Shanmugam <bschanmu@redhat.com>
Date: Mon, 19 Sep 2016 07:41:44 +0000
Subject: [PATCH 1/2] Pacemaker support for OVN DB servers

This patch enables ovn database servers to be started in active/backup
mode in the pacemaker cluster.

A virtual IP resource will be co-hosted with the active database server
so that, the services (like ovn-controllers and neutron OVN ML2
mechanism driver) which depends on ovn database servers (will always connect
to a single IP address on which the active database server listens on.

ovn northd is managed by the pacemaker and it is colocated on the same
node where the virtual IP resides.

Also, when HA is enabled for ovn database servers, haproxy does not
configure the ovn database servers in its configuration.

Co-authored:by: Numan Siddique <nusiddiq@redhat.com>
Change-Id: I9dc366002ef5919339961e5deebbf8aa815c73db
Closes-bug: #1670564
---
 manifests/haproxy.pp                      |  10 ++-
 manifests/profile/pacemaker/ovn_northd.pp | 130 ++++++++++++++++++++++++++++++
 2 files changed, 139 insertions(+), 1 deletion(-)
 create mode 100644 manifests/profile/pacemaker/ovn_northd.pp

diff --git a/manifests/haproxy.pp b/manifests/haproxy.pp
index 517df4b..8b95339 100644
--- a/manifests/haproxy.pp
+++ b/manifests/haproxy.pp
@@ -320,6 +320,10 @@
 #  (optional) Enable or not OVN northd binding
 #  Defaults to hiera('ovn_dbs_enabled', false)
 #
+# [*ovn_dbs_ha_disabled*]
+#  (optional) Whether or not HA is disabled for OVN DB servers
+#  Defaults to hiera('ovn_dbs_ha_disabled', true)
+#
 # [*zaqar_ws*]
 #  (optional) Enable or not Zaqar Websockets binding
 #  Defaults to false
@@ -594,6 +598,7 @@ class tripleo::haproxy (
   $ceph_rgw                    = hiera('ceph_rgw_enabled', false),
   $opendaylight                = hiera('opendaylight_api_enabled', false),
   $ovn_dbs                     = hiera('ovn_dbs_enabled', false),
+  $ovn_dbs_ha_disabled         = hiera('ovn_dbs_ha_disabled', true),
   $zaqar_ws                    = hiera('zaqar_api_enabled', false),
   $ui                          = hiera('enable_ui', false),
   $aodh_network                = hiera('aodh_api_network', undef),
@@ -1531,9 +1536,12 @@ class tripleo::haproxy (
   }
 
 
-  if $ovn_dbs {
+  if $ovn_dbs and $ovn_dbs_ha_disabled {
     # FIXME: is this config enough to ensure we only hit the first node in
     # ovn_northd_node_ips ?
+    # We only configure ovn_dbs_vip in haproxy if HA for OVN DB servers is
+    # disabled.
+    # If HA is enabled, pacemaker configures the OVN DB servers accordingly.
     $ovn_db_listen_options = {
       'option'         => [ 'tcpka' ],
       'timeout client' => '90m',
diff --git a/manifests/profile/pacemaker/ovn_northd.pp b/manifests/profile/pacemaker/ovn_northd.pp
new file mode 100644
index 0000000..396e4c2
--- /dev/null
+++ b/manifests/profile/pacemaker/ovn_northd.pp
@@ -0,0 +1,130 @@
+# Copyright 2017 Red Hat, Inc.
+#
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+#
+# == Class: tripleo::profile::pacemaker::neutron::plugins::ml2::ovn
+#
+# Neutron ML2 driver Pacemaker HA profile for tripleo
+#
+# === Parameters
+#
+# [*pacemaker_master*]
+#   (Optional) The hostname of the pacemaker master
+#   Defaults to hiera('ovn_dbs_short_bootstrap_node_name')
+#
+# [*step*]
+#   (Optional) The current step in deployment. See tripleo-heat-templates
+#   for more details.
+#   Defaults to hiera('step')
+#
+# [*pcs_tries*]
+#  (Optional) The number of times pcs commands should be retried.
+#   Defaults to hiera('pcs_tries', 20)
+#
+# [*ovn_dbs_vip*]
+#   (Optional) The OVN database virtual IP to be managed by the pacemaker.
+#   Defaults to hiera('ovn_dbs_vip')
+#
+class tripleo::profile::pacemaker::ovn_northd (
+  $pacemaker_master = hiera('ovn_dbs_short_bootstrap_node_name'),
+  $step             = hiera('step'),
+  $pcs_tries        = hiera('pcs_tries', 20),
+  $ovn_dbs_vip      = hiera('ovn_dbs_vip'),
+) {
+
+  if $step >= 2 {
+    pacemaker::property { 'ovn-northd-node-property':
+      property => 'ovn-northd-role',
+      value    => true,
+      tries    => $pcs_tries,
+      node     => $::hostname,
+    }
+  }
+
+  # We want the config file to be created on all the cluster nodes,
+  # so that when a slave becomes master, it can start ovn-northd.
+  if $step == 4 and $::osfamily == 'RedHat' {
+    augeas { 'sysconfig-ovn-northd':
+      context =>  '/files/etc/sysconfig/ovn-northd',
+      changes =>  "set OVN_NORTHD_OPTS '\"--db-nb-addr=${ovn_dbs_vip} --db-sb-addr=${ovn_dbs_vip} \
+--db-nb-create-insecure-remote=yes --db-sb-create-insecure-remote=yes --ovn-manage-ovsdb=no\"'",
+    }
+  }
+
+  if $step >= 5 and downcase($::hostname) == $pacemaker_master {
+    $ovndb_servers_resource_name = 'ovndb_servers'
+    $ovn_northd_resource_name    = 'ovn-northd'
+    $ovndb_servers_ocf_name      = 'ovn:ovndb-servers'
+    $ovndb_vip_resource_name     = "ip-${ovn_dbs_vip}"
+    $northd_db_params_path = '/etc/sysconfig/ovn-northd'
+
+    pacemaker::resource::ip { "${ovndb_vip_resource_name}":
+      ip_address   => "${ovn_dbs_vip}",
+      cidr_netmask => 24,
+    }
+
+    pacemaker::resource::ocf { "${ovndb_servers_resource_name}":
+      ocf_agent_name  => "${ovndb_servers_ocf_name}",
+      master_params   => '',
+      resource_params => "master_ip=${ovn_dbs_vip}",
+      meta_params     => 'notify=true'
+    }
+
+    pacemaker::resource::service { '$ovn_northd_resource_name':
+      op_params     => 'start timeout=200s stop timeout=200s',
+      tries         => $pcs_tries,
+      location_rule => {
+        resource_discovery => 'exclusive',
+        score              => 0,
+        expression         => ['ovn-northd-role eq true'],
+      },
+    }
+
+    pacemaker::constraint::base { "${ovndb_vip_resource_name}-then-${ovndb_servers_resource_name}":
+      constraint_type => 'order',
+      first_resource  => "${ovndb_vip_resource_name}",
+      second_resource => "${ovndb_servers_resource_name}-master",
+      first_action    => 'start',
+      second_action   => 'start',
+      require         => [Pacemaker::Resource::Ip["${ovndb_vip_resource_name}"],
+                          Pacemaker::Resource::Ocf["${ovndb_servers_resource_name}"]],
+    }
+
+    pacemaker::constraint::base { "${ovndb_servers_resource_name}-then-${ovn_northd_resource_name}":
+      constraint_type => 'order',
+      first_resource  => "${ovndb_servers_resource_name}-master",
+      second_resource => "${ovn_northd_resource_name}",
+      first_action    => 'start',
+      second_action   => 'start',
+      require         => [Pacemaker::Resource::Ocf["${ovndb_servers_resource_name}"],
+                          Pacemaker::Resource::Service["${ovn_northd_resource_name}"]],
+    }
+
+    pacemaker::constraint::colocation { "${ovndb_vip_resource_name}-with-${ovndb_servers_resource_name}":
+      source       => "${ovndb_vip_resource_name}",
+      target       => "${ovndb_servers_resource_name}-master",
+      master_slave => true,
+      score        => 'INFINITY',
+      require      =>  [Pacemaker::Resource::Ocf["${ovndb_servers_resource_name}"],
+                        Pacemaker::Resource::Ip["${ovndb_vip_resource_name}"]],
+    }
+
+    pacemaker::constraint::colocation { "${ovndb_vip_resource_name}-with-${ovn_northd_resource_name}":
+      source  => "${ovndb_vip_resource_name}",
+      target  => "${ovn_northd_resource_name}",
+      score   => 'INFINITY',
+      require => [Pacemaker::Resource::Service["${ovn_northd_resource_name}"],
+                  Pacemaker::Resource::Ip["${ovndb_vip_resource_name}"]],
+    }
+  }
+}
-- 
2.9.3

